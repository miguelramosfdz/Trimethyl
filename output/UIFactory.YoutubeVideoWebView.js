Ext.data.JsonP.UIFactory_YoutubeVideoWebView({"tagname":"class","name":"UIFactory.YoutubeVideoWebView","autodetected":{},"files":[{"filename":"youtubevideowebview.js","href":"youtubevideowebview.html#UIFactory-YoutubeVideoWebView"}],"author":[{"tagname":"author","name":"Flavio De Stefano","email":"flavio.destefano@caffeinalab.com"}],"params":[{"tagname":"params","type":"Object","name":"args","doc":"<p>[description]</p>\n","html_type":"Object"}],"return":{"type":"Ti.UI.WebView","name":"return","doc":"<p>[description]</p>\n","properties":null,"html_type":"Ti.UI.WebView"},"members":[],"alternateClassNames":[],"aliases":{},"id":"class-UIFactory.YoutubeVideoWebView","short_doc":"View that contain a Youtube video. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/youtubevideowebview.html#UIFactory-YoutubeVideoWebView' target='_blank'>youtubevideowebview.js</a></div></pre><div class='doc-contents'><p>View that contain a Youtube video.\nInternally use a WebView to provide the content.</p>\n\n<p>To provide the Video ID, you need to pass to the <code>videoId</code> property.\nAll property set in the <code>youtube</code> property are passed into the Youtube API.</p>\n\n<p>On iOS, clicking on the video cause the video to play in native iOS player in fullscreen.</p>\n\n<p>More info at <a href=\"https://developers.google.com/youtube/iframe_api_reference\">https://developers.google.com/youtube/iframe_api_reference</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Object<div class='sub-desc'><p>[description]</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ti.UI.WebView</span><div class='sub-desc'><p>[description]</p>\n</div></li></ul></div><div class='members'></div></div>","meta":{}});